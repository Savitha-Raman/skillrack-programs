to find the longest substring in the given string with n unique characters
Input: abcdcdabcdef 2
Output: 4 
Explanation: The longest possible substring with 2 unique characters in abcdcdabcdef is cdcd whose length is 4.
Example Input/Output 2: 
Input: manager 3
Output: 4 
Explanation: The longest possible substring with 3 unique characters in manager is either mana or anag whose length is 4. 
Example Input/Output 3:
Input: dddddddddddd 1 
Output: 12
Explanation: The longest possible substring with 1 unique character in dddddddddddd is dddddddddddd itself which is 12.




#include<stdio.h>
#include <stdlib.h>

int main()
{ char a[200],b[100];
  int length,i,n,x,j,count,max=0,m=0,k=0,check,y,start;
  scanf("%s %d",&a,&n);
  length=strlen(a);
  for(i=0;i<length;i++){
      k++;
      start=i;
      //printf("%d ",k);
      m=0;count=0;
      memset(b,0,100);
      b[m]=a[i];
      m++;
      i++;
      while(m<n){
        check=0;
        for(j=0;j<m;j++){
           if(b[j]==a[i])
           check++;
        }
        if(check==0)
        { b[m]=a[i];
          m++;
        }
        i++;
     }
     for(x=start;x<length;x++){
         check=0;
         for(y=0;y<m;y++){
             if(a[x]==b[y])
               check++;
         }  
         if(check==0)
           break;
         else
           count++; 
     }
      //printf(" %s ",b);
     // printf(" %d ",count);
      if(max<count)
       max=count;
      i=k-1;
  }    
  printf("%d",max);
}
